{"version":3,"file":"static/js/889.be462bb7.chunk.js","mappings":"8KAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAOC,GAAhC,yFAEoB,mCACVC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,mCAGdH,MAAAA,EACAI,SAAU,UACVC,KAAM,IAPZ,SAU2BC,EAAAA,EAAAA,IAAA,uCACWP,EADX,YACoBE,IAX/C,UAc6B,QAJnBM,EAVV,QAckBC,OAdlB,sBAeY,IAAIC,MAAMF,EAASC,QAf/B,wBAiBiBD,EAASG,KAjB1B,2EAmBIC,QAAQC,IAAR,MAnBJ,iFAuBA,I,SAvByB,EAAVd,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,oICAFe,EAAUC,EAAAA,GAAAA,IAAH,4DAKPC,EAAOD,EAAAA,GAAAA,IAAH,8CAIJE,EAAOF,EAAAA,GAAAA,GAAH,8C,GAICA,EAAAA,GAAAA,GAAH,qE,QCwBf,EApCkB,SAAC,GAEZ,IAAD,IADJG,KAAQC,EACJ,EADIA,MAAOC,EACX,EADWA,YAAaC,EACxB,EADwBA,aAAcC,EACtC,EADsCA,SAAUC,EAChD,EADgDA,OAKpD,OACE,UAACT,EAAD,YACE,gBAAKU,IAAG,UALK,8BAKL,OAJS,QAIT,OAA+BJ,GAAeK,IAAKN,KAC3D,UAACH,EAAD,YACE,wBAAKG,KACL,yBAAG,iBAAeE,MAClB,0BACE,SAACJ,EAAD,UAAM,cAAgB,IAAEK,MAE1B,wBACE,SAACL,EAAD,UAAM,cAER,wBACGM,EAAOG,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OAAO,wBAAcA,GAALD,EACjB,WAKV,E,iBC1BYE,EAAKd,EAAAA,GAAAA,GAAH,qEAIFe,EAAKf,EAAAA,GAAAA,GAAH,uFAKFgB,GAAOhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,8CAGJkB,GAAWlB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,8MC2BrB,EArCkB,WAChB,OAA0BmB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACR1C,EAAAA,EAAAA,GAAU,SAAD,OAAUsC,IAAWK,MAAK,SAAAC,GACjCP,EAASO,EACV,GACF,GAAE,CAACN,KAGF,6BACE,SAACJ,EAAD,CAAUW,GAAIL,EAASM,MAAQN,EAASM,MAAQ,IAAhD,SAAqD,mBAGpDV,IAAS,SAAC,EAAD,CAAWjB,KAAMiB,KAC3B,wBAAI,4BACJ,UAAC,EAAD,YACE,SAACL,EAAD,WACE,SAACC,EAAD,CAAMa,GAAG,OAAOC,MAAON,EAASM,MAAhC,SAAuC,YAIzC,SAACf,EAAD,WACE,SAACC,EAAD,CAAMa,GAAG,UAAUC,MAAON,EAASM,MAAnC,SAA0C,eAI5C,SAAC,EAAAC,SAAD,CAAUC,UAAU,yBAAK,oBAAzB,UACE,SAAC,KAAD,WAKT,C","sources":["ApiGetter/ApiGetter.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","pages/MovieInfo.styled.jsx","pages/MovieInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchData(param, query) {\n  try {\n    const API_KEY = 'ccb4b84fe6a2fe23dccdfdc3b96290a5';\n    const params = new URLSearchParams({\n      api_key: API_KEY,\n      query,\n      language: 'en - US',\n      page: 1,\n    });\n\n    const responce = await axios.get(\n      `https://api.themoviedb.org/3/${param}?${params}`\n    );\n\n    if (!responce.status === 200) {\n      throw new Error(responce.status);\n    }\n    return await responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default FetchData;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 20px;\n`;\n\nexport const Desc = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Span = styled.h3`\n  margin-left: 30px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { Desc, Span, Wrapper } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\nconst MovieItem = ({\n  film: { title, poster_path, vote_average, overview, genres },\n}) => {\n  const base_url = 'http://image.tmdb.org/t/p/';\n  const poster_sizes = 'w342';\n\n  return (\n    <Wrapper>\n      <img src={`${base_url}${poster_sizes}${poster_path}`} alt={title}></img>\n      <Desc>\n        <h1>{title}</h1>\n        <p>Vote average: {vote_average}</p>\n        <p>\n          <Span>Overview:</Span> {overview}\n        </p>\n        <p>\n          <Span>Genres</Span>\n        </p>\n        <ul>\n          {genres.map(({ id, name }) => {\n            return <li key={id}>{name}</li>;\n          })}\n        </ul>\n      </Desc>\n    </Wrapper>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n};\n\nexport default MovieItem;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Li = styled.li`\n  padding: 5px 10px;\n  font-size: 20px;\n  font-weight: 600;\n`;\nexport const Link = styled(NavLink)`\n  padding: 8px 10px;\n`;\nexport const LinkBack = styled(NavLink)`\n  display: inline-block;\n  margin: 10px;\n  padding: 5px;\n  text-decoration-line: none;\n  border-radius: 3px;\n  border-color: blue;\n  border-style: inset;\n  font-weight: 600;\n`;\n","import React, { Suspense, useState, useEffect } from 'react';\nimport FetchData from 'ApiGetter/ApiGetter';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Ul, Li, Link, LinkBack } from './MovieInfo.styled';\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchData(`movie/${movieId}`).then(mov => {\n      setMovie(mov);\n    });\n  }, [movieId]);\n\n  return (\n    <main>\n      <LinkBack to={location.state ? location.state : '/'}>\n        Back to movies\n      </LinkBack>\n      {movie && <MovieItem film={movie}></MovieItem>}\n      <h2>Additional information</h2>\n      <Ul>\n        <Li>\n          <Link to=\"cast\" state={location.state}>\n            Cast\n          </Link>\n        </Li>\n        <Li>\n          <Link to=\"reviews\" state={location.state}>\n            Reviews\n          </Link>\n        </Li>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </Ul>\n    </main>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["FetchData","param","query","params","URLSearchParams","api_key","language","page","axios","responce","status","Error","data","console","log","Wrapper","styled","Desc","Span","film","title","poster_path","vote_average","overview","genres","src","alt","map","id","name","Ul","Li","Link","NavLink","LinkBack","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","then","mov","to","state","Suspense","fallback"],"sourceRoot":""}