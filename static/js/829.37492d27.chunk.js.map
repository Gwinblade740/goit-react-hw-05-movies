{"version":3,"file":"static/js/829.37492d27.chunk.js","mappings":"8KAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAOC,GAAhC,yFAEoB,mCACVC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,mCAGdH,MAAAA,EACAI,SAAU,UACVC,KAAM,IAPZ,SAU2BC,EAAAA,EAAAA,IAAA,uCACWP,EADX,YACoBE,IAX/C,UAc6B,QAJnBM,EAVV,QAckBC,OAdlB,sBAeY,IAAIC,MAAMF,EAASC,QAf/B,wBAiBiBD,EAASG,KAjB1B,2EAmBIC,QAAQC,IAAR,MAnBJ,iFAuBA,I,SAvByB,EAAVd,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,qICAFe,EAAKC,EAAAA,GAAAA,GAAH,qEAIFC,EAAKD,EAAAA,GAAAA,GAAH,uIAOFE,EAAQF,EAAAA,GAAAA,EAAH,oDAILG,EAAUH,EAAAA,GAAAA,EAAH,oD,SCYpB,EAzBe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,GAAU,SAAD,OAAUuB,EAAV,aAA6BG,MAAK,SAAAC,GACzCL,EAAUK,EAAIC,QACf,GACF,GAAE,CAACL,KAEF,+BACE,SAACR,EAAD,UACGM,GACCA,EAAOQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,UAACf,EAAD,YACE,SAACC,EAAD,UAAQa,KACR,SAACZ,EAAD,UAAUa,MAFHF,EAKZ,OAIV,C","sources":["ApiGetter/ApiGetter.jsx","components/Review/Review.styled.jsx","components/Review/Review.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchData(param, query) {\n  try {\n    const API_KEY = 'ccb4b84fe6a2fe23dccdfdc3b96290a5';\n    const params = new URLSearchParams({\n      api_key: API_KEY,\n      query,\n      language: 'en - US',\n      page: 1,\n    });\n\n    const responce = await axios.get(\n      `https://api.themoviedb.org/3/${param}?${params}`\n    );\n\n    if (!responce.status === 200) {\n      throw new Error(responce.status);\n    }\n    return await responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default FetchData;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Li = styled.li`\n  /* padding: 8px 10px; */\n  margin-left: 20px;\n  list-style-type: disclosure-closed;\n  padding: 8px 10px;\n`;\n\nexport const Title = styled.p`\n  /* padding: 8px 10px; */\n`;\n\nexport const Content = styled.p`\n  /* padding: 8px 10px; */\n`;\n","import React, { useState, useEffect } from 'react';\nimport FetchData from 'ApiGetter/ApiGetter';\nimport { useParams } from 'react-router-dom';\nimport { Content, Li, Title, Ul } from './Review.styled';\nconst Review = () => {\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    FetchData(`movie/${movieId}/reviews`).then(rev => {\n      setReview(rev.results);\n    });\n  }, [movieId]);\n  return (\n    <>\n      <Ul>\n        {review &&\n          review.map(({ id, author, content }) => {\n            return (\n              <Li key={id}>\n                <Title>{author}</Title>\n                <Content>{content}</Content>\n              </Li>\n            );\n          })}\n      </Ul>\n    </>\n  );\n};\nexport default Review;\n"],"names":["FetchData","param","query","params","URLSearchParams","api_key","language","page","axios","responce","status","Error","data","console","log","Ul","styled","Li","Title","Content","useState","review","setReview","movieId","useParams","useEffect","then","rev","results","map","id","author","content"],"sourceRoot":""}