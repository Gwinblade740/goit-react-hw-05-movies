{"version":3,"file":"static/js/736.7b318ff2.chunk.js","mappings":"8KAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAOC,GAAhC,yFAEoB,mCACVC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,mCAGdH,MAAAA,EACAI,SAAU,UACVC,KAAM,IAPZ,SAU2BC,EAAAA,EAAAA,IAAA,uCACWP,EADX,YACoBE,IAX/C,UAc6B,QAJnBM,EAVV,QAckBC,OAdlB,sBAeY,IAAIC,MAAMF,EAASC,QAf/B,wBAiBiBD,EAASG,KAjB1B,2EAmBIC,QAAQC,IAAR,MAnBJ,iFAuBA,I,SAvByB,EAAVd,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,iICAFe,EAAKC,EAAAA,GAAAA,GAAH,qEAKFC,EAAKD,EAAAA,GAAAA,GAAH,2G,SCkBf,EApBa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OALAE,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,GAAU,SAAD,OAAUqB,EAAV,aAA6BG,MAAK,SAAAC,GACzCL,EAAQK,EAAIN,KACb,GACF,GAAE,CAACE,KAEF,+BACE,SAACN,EAAD,UACGI,GACCA,EAAKO,KAAI,SAAAC,GACP,OAAO,SAACV,EAAD,UAAiBU,EAAGC,MAAXD,EAAGE,GACpB,OAIV,C","sources":["ApiGetter/ApiGetter.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchData(param, query) {\n  try {\n    const API_KEY = 'ccb4b84fe6a2fe23dccdfdc3b96290a5';\n    const params = new URLSearchParams({\n      api_key: API_KEY,\n      query,\n      language: 'en - US',\n      page: 1,\n    });\n\n    const responce = await axios.get(\n      `https://api.themoviedb.org/3/${param}?${params}`\n    );\n\n    if (!responce.status === 200) {\n      throw new Error(responce.status);\n    }\n    return await responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default FetchData;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Li = styled.li`\n  margin-left: 20px;\n  list-style-type: disclosure-closed;\n  padding: 8px 10px;\n`;\n","import FetchData from 'ApiGetter/ApiGetter';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Li, Ul } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    FetchData(`movie/${movieId}/credits`).then(cas => {\n      setCast(cas.cast);\n    });\n  }, [movieId]);\n  return (\n    <>\n      <Ul>\n        {cast &&\n          cast.map(el => {\n            return <Li key={el.id}>{el.name}</Li>;\n          })}\n      </Ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["FetchData","param","query","params","URLSearchParams","api_key","language","page","axios","responce","status","Error","data","console","log","Ul","styled","Li","useState","cast","setCast","movieId","useParams","useEffect","then","cas","map","el","name","id"],"sourceRoot":""}