{"version":3,"file":"static/js/724.9a7b85e4.chunk.js","mappings":"8KAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAOC,GAAhC,yFAEoB,mCACVC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,mCAGdH,MAAAA,EACAI,SAAU,UACVC,KAAM,IAPZ,SAU2BC,EAAAA,EAAAA,IAAA,uCACWP,EADX,YACoBE,IAX/C,UAc6B,QAJnBM,EAVV,QAckBC,OAdlB,sBAeY,IAAIC,MAAMF,EAASC,QAf/B,wBAiBiBD,EAASG,KAjB1B,2EAmBIC,QAAQC,IAAR,MAnBJ,iFAuBA,I,SAvByB,EAAVd,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,0JCEFe,EAAOC,EAAAA,GAAAA,KAAH,6NAYJC,EAAQD,EAAAA,GAAAA,MAAH,wLAWLE,EAAMF,EAAAA,GAAAA,OAAH,2bAmBHG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,yDAKJK,EAAKL,EAAAA,GAAAA,GAAH,qEAKFM,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,8C,SCCjB,EAnDe,WACb,OAAwCQ,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,UAAY,GAC3C,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAV/B,EACF,OAAO4B,EAAU,OAEnB9B,EAAAA,EAAAA,GAAU,eAAgBE,GAAOgC,MAAK,SAAAC,GACpCL,EAAUK,EAAIC,QACf,GACF,GAAE,CAAClC,IAOJ,OACE,iCACE,UAACa,EAAD,YACE,SAACG,EAAD,CAAKmB,KAAK,SAASC,UAAQ,EAA3B,UACE,SAACnB,EAAD,OAGF,SAACF,EAAD,CACEoB,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOxC,EACPyC,SAlBa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAC1BG,EAA8B,KAAjBH,EAAMI,OAAgB,CAAE5C,MAAOwC,GAAU,CAAC,EAC7DhB,EAAgBmB,EACjB,QAkBG,SAACxB,EAAD,UACGQ,GACCA,EAAOkB,KAAI,SAAAC,GACT,OACE,SAAC1B,EAAD,CAAM2B,GAAE,kBAAaD,EAAME,IAAqBC,MAAOpB,EAAvD,SACGiB,EAAMI,OAD6BJ,EAAME,GAI/C,QAIV,EC1CD,EATmB,WACjB,OACE,6BACE,SAAC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["ApiGetter/ApiGetter.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function FetchData(param, query) {\n  try {\n    const API_KEY = 'ccb4b84fe6a2fe23dccdfdc3b96290a5';\n    const params = new URLSearchParams({\n      api_key: API_KEY,\n      query,\n      language: 'en - US',\n      page: 1,\n    });\n\n    const responce = await axios.get(\n      `https://api.themoviedb.org/3/${param}?${params}`\n    );\n\n    if (!responce.status === 200) {\n      throw new Error(responce.status);\n    }\n    return await responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default FetchData;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border-color: blue;\n  border-style: inset;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  /* opacity: 0.6; */\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  /* cursor: pointer; */\n  outline: none;\n\n  /* &:hover {\n    opacity: 1;\n  } */\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 10px;\n`;\n","import FetchData from '../../ApiGetter/ApiGetter';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Btn, Form, Icon, Input, Link, Ul } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return setMovies(null);\n    }\n    FetchData('search/movie', query).then(mov => {\n      setMovies(mov.results);\n    });\n  }, [query]);\n\n  const handleChange = ({ target: { value } }) => {\n    const nextParams = value.trim() !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <Form>\n        <Btn type=\"submit\" disabled>\n          <Icon></Icon>\n        </Btn>\n\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleChange}\n        />\n      </Form>\n      <Ul>\n        {movies &&\n          movies.map(movie => {\n            return (\n              <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n                {movie.title}\n              </Link>\n            );\n          })}\n      </Ul>\n    </>\n  );\n};\n\nexport default Movies;","import Movies from 'components/Movies/Movies';\nimport React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  return (\n    <main>\n      <Movies></Movies>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["FetchData","param","query","params","URLSearchParams","api_key","language","page","axios","responce","status","Error","data","console","log","Form","styled","Input","Btn","Icon","HiSearch","Ul","Link","NavLink","useSearchParams","searchParams","setSearchParams","get","useState","movies","setMovies","location","useLocation","useEffect","then","mov","results","type","disabled","autoComplete","autoFocus","placeholder","value","onChange","target","nextParams","trim","map","movie","to","id","state","title"],"sourceRoot":""}